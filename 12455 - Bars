#include<bits/stdc++.h>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
typedef vector<ll> vll;

#define PI (2*acos(0.0))
#define eps 1e-9
#define pb push_back
#define endl "\n"
#define watch(x) cout << (#x) << " is " << (x) << endl;
#define show(v) for(int fi = 0; fi < v.size(); fi++) cout << v[fi] << " "; cout << endl;
#define showpair(v) for(int fi = 0; fi < v.size(); fi++) cout << v[fi].first << " " << v[fi].second << endl;
#define ff first
#define ss second
#define fu cout << "lol" << endl;
#define precision(n) cout << fixed << setprecision(n);
#define lb lower_bound
#define up upper_bound
#define vscan for(i = 0;i<n;i++){cin>>in; v.pb(in);}
#define all(a) a.begin(), a.end()
#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define mem(a,val) memset(a,val,sizeof(a))
#define loop(i,n) for(i = 0; i < n; i++)
#define TC() ull T; cin>>T; while(T--)
#define IN(x) {scanf("%d",&x);}
#define LL(x) {scanf("%lld",&x);}
#define CC(x) {scanf("%c",&x);}
#define pfl(x) printf("%d\n",x)
#define pfll(x) printf("%lld\n",x)
#define newl puts("")
#define space printf(" ")
#define MOD 1000000007
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);

                                        /*     ITERATIVE METHOD     */
                                        

int main()
{
    int i = 0, j = 0, cs = 0, in;
    TC(){
        int n; cin>>n;
        int p; cin>>p;
        vi v;
        for(i = 0; i < p; i++){
            int in; cin>>in; v.pb(in);
        }
        bool f = 0;
        for(i = 0; i < (1<<p); i++){
            ll sum = 0;
            for(j = 0; j < p; j++){
                if(i & (1<<j)) sum += v[j];
            }
            if(sum == n){
                f = 1; break;
            }
        }
        if(f) cout << "YES" << endl;
        else cout << "NO" << endl;
    }
    return 0;
}


                                    /*     RECURSIVE METHOD     */
                                    
                                    
vi v;
int n, p;

bool f(int pos, ll sum){
    if(pos >= p){
        if(sum == n) return true;
        return false;
    }
    return f(pos+1,sum) | f(pos+1,sum+v[pos]);
}

int main()
{
    int i = 0, j = 0, cs = 0, in;
    TC(){
        v.clear();
        cin>>n>>p;
        for(i = 0; i < p; i++){
            int in; cin>>in; v.pb(in);
        }
        if(f(0,0)) cout << "YES" << endl;
        else cout << "NO" << endl;
    }
    return 0;
}
