#include<bits/stdc++.h>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
typedef vector<ll> vll;

#define PI (2*acos(0.0))
#define eps 1e-9
#define pb push_back
#define endl "\n"
#define watch(x) cout << (#x) << " is " << (x) << endl;
#define show(v) for(int fi = 0; fi < v.size(); fi++) cout << v[fi] << " "; cout << endl;
#define showpair(v) for(int fi = 0; fi < v.size(); fi++) cout << v[fi].first << " " << v[fi].second << endl;
#define ff first
#define ss second
#define fu cout << "lol" << endl;
#define precision(n) cout << fixed << setprecision(n);
#define lb lower_bound
#define up upper_bound
#define vscan for(i = 0;i<n;i++){cin>>in; v.pb(in);}
#define all(a) a.begin(), a.end()
#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define mem(a,val) memset(a,val,sizeof(a))
#define loop(i,n) for(i = 0; i < n; i++)
#define TC() ull T; cin>>T; while(T--)
#define IN(x) {scanf("%d",&x);}
#define LL(x) {scanf("%lld",&x);}
#define CC(x) {scanf("%c",&x);}
#define pfl(x) printf("%d\n",x)
#define pfll(x) printf("%lld\n",x)
#define newl puts("")
#define space printf(" ")
#define MOD 1000000007
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);

                                         /* RECURSIVE BACKTRACK METHOD */

vii v;
int t, n;
vi ans(15);
bool f;

void backtrack(int id, int pos, int sum){
    if(sum > t) return;
    if(id == v.size()){
        if(sum == t){
            f = true;
            for(int i = 0; i < pos; i++){
                if(i) cout << "+";
                cout << ans[i];
            }
            cout << endl;
        }
        return;
    }
    for(int i = v[id].ss; i >= 0; i--){
        int j = 0;
        int newsum = sum;
        while(j < i) ans[pos + j] = v[id].ff, j++, newsum  += v[id].ff;
        backtrack(id+1, pos+j, newsum);
    }
}

int main()
{
    int i = 0, j = 0, cs = 0, in;
    while(cin>>t>>n, n){
        vi arr(15);
        for(i = 0; i < n; i++) cin>>arr[i];
        bool vis[15]; mem(vis,false);
        v.clear();
        for(i = 0; i < n; i++){
            if(vis[i]) continue;
            int cnt = 1;
            for(j = i+1; j < n; j++){
                if(arr[j] == arr[i]) cnt++, vis[j] = true;
            }
            v.pb({arr[i], cnt});
        }
        cout << "Sums of " << t << ":" << endl;
        f = 0;
        backtrack(0,0,0);
        if(!f) cout << "NONE" << endl;
    }
    return 0;
}


                                                  /* LOOP METHOD */
  
  int main()
{
    int i = 0, j = 0, cs = 0, in;
    int t, n;
    while(cin>>t>>n, n){
        vi v;
        for(i = 0; i < n; i++){
            int in; cin>>in; v.pb(in);
        }
        cout << "Sums of " << t << ":" << endl;
        bool f = 0;
        vector<vi> ans;
        for(i = 0; i < (1<<n); i++){
            int cnt = 0;
            for(j = 0; j < v.size(); j++){
                if(i & (1<<j)){
                    cnt += v[j];
                }
            }
            if(cnt == t){
                vi para;
                for(j = 0; j < v.size(); j++){
                    if(i & (1<<j)) para.pb(v[j]);
                }
                ans.pb(para);
            }
        }
        if(ans.size() == 0) cout << "NONE" << endl;
        else{
            sort(all(ans), [](vi a, vi b){
                    int i;
                    for(i = 0; i < min(a.size(), b.size()); i++){
                        if(a[i] != b[i]) break;
                    }
                    if(i == min(a.size(), b.size())) return false;
                    return a[i] > b[i];
                });
            ans.erase(unique(all(ans)), ans.end());
            for(i = 0; i < ans.size(); i++){
                for(j = 0; j < ans[i].size(); j++){
                    if(j) cout << "+";
                    cout << ans[i][j];
                }
                cout << endl;
            }
        }
    }
    return 0;
}
