#include<bits/stdc++.h>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
typedef vector<ll> vll;

#define PI (2*acos(0.0))
#define eps 1e-9
#define pb push_back
#define endl "\n"
#define watch(x) cout << (#x) << " is " << (x) << endl;
#define show(v) for(int fi = 0; fi < v.size(); fi++) cout << v[fi] << " "; cout << endl;
#define showpair(v) for(int fi = 0; fi < v.size(); fi++) cout << v[fi].first << " " << v[fi].second << endl;
#define ff first
#define ss second
#define fu cout << "lol" << endl;
#define precision(n) cout << fixed << setprecision(n);
#define lb lower_bound
#define up upper_bound
#define vscan for(i = 0;i<n;i++){cin>>in; v.pb(in);}
#define all(a) a.begin(), a.end()
#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define mem(a,val) memset(a,val,sizeof(a))
#define loop(i,n) for(i = 0; i < n; i++)
#define TC() ull T; cin>>T; while(T--)
#define IN(x) {scanf("%d",&x);}
#define LL(x) {scanf("%lld",&x);}
#define CC(x) {scanf("%c",&x);}
#define pfl(x) printf("%d\n",x)
#define pfll(x) printf("%lld\n",x)
#define newl puts("")
#define space printf(" ")
#define MOD 1000000007
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);


                                /* SOLUTION USING IMPLEMENTATION / BFS CONCEPT */
                                

int main()
{
    int i = 0, j = 0, cs = 0, in;
    int n, m;
    while(cin>>n>>m, n | m){
        vector<vi> v(m);
        for(i = 0; i < m; i++){
            int k; cin>>k;
            for(j = 0; j < k; j++){
                int in; cin>>in; v[i].pb(in);
            }
        }
        queue<int> q; q.push(0);
        bool vis[m+5]; mem(vis,false);
        bool vis2[n+5]; mem(vis2,false);
        vis2[0] = true;
        int cnt = 0;
        while(!q.empty()){
            int x = q.front();
            q.pop();
            cnt++;
            for(i = 0; i < m; i++){
                if(vis[i]) continue;
                auto it = find(all(v[i]), x);
                if(it == v[i].end()) continue;
                for(auto j : v[i]){
                    if(vis2[j]) continue;
                    q.push(j);
                    vis2[j] = true;
                }
                vis[i] = true;
            }
        }
        cout << cnt << endl;
    }
    return 0;
}


                                    /* SOLUTION USING DISJOINT SET UNION FIND */
                                    

const int N = 3e4 + 10;
vi v(N);

int par(int a){
    if(v[a] == a) return a;
    return v[a] = par(v[a]);
}

void uni(int a, int b){
    a = par(a);
    b = par(b);
    if(a != b) v[a] = b;
}

int main()
{
    int i = 0, j = 0, cs = 0, in;
    int n, m;
    while(cin>>n>>m, n | m){
        for(i = 0; i < n; i++) v[i] = i;
        for(i = 0; i < m; i++){
            int k; cin>>k; int a; cin>>a;
            for(j = 0; j < k-1; j++){
                int in; cin>>in; uni(a,in);
            }
        }
        int pp = par(0);
        int cnt = 1;
        for(i = 1; i < n; i++){
            if(par(i) == pp) cnt++;
        }
        cout << cnt << endl;
    }
    return 0;
}
